{"version":3,"sources":["utils/utils.js","utils/api.js","images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/ImagePopup.js","components/EnterPageForm.js","components/Register.js","components/Login.js","images/success_icon.svg","images/failure_icon.svg","components/InfoTooltip.js","contexts/AuthContext.js","components/ProtectedRoute.js","components/App.js","reportWebVitals.js","components/AuthWrapper.js","index.js"],"names":["popupConfig","enterConfig","apiConfig","Api","options","this","_baseUrl","baseUrl","_headers","headers","path","method","body","fetchObject","JSON","stringify","fetch","then","res","ok","json","Promise","reject","status","DataApi","_fetchPath","name","about","url","avatar","link","cardId","isLiked","AuthApi","token","_authHeaders","email","password","prevHeaders","_makeAuthHeaders","request","api","authorization","authApi","Header","props","className","src","logo","alt","exact","to","onClick","onLogout","CurrentUserContext","React","createContext","Card","currentUser","useContext","card","likes","some","like","_id","isMyCard","owner","type","onCardDelete","onCardClick","onCardLike","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","Footer","PopupWithForm","isOpen","onClose","onSubmit","onlyTitle","formTitle","children","isSaving","submitButtonText","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","placeholder","minLength","maxLength","required","value","onChange","target","EditAvatarPopup","inputRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","cardName","setCardName","cardUrl","setCardUrl","evt","ConfirmDeletePopup","ImagePopup","EnterPageForm","filter","child","includes","Register","setEmail","setPassword","onRegister","onLogin","InfoTooltip","successful","successIcon","failureIcon","AuthContext","ProtectedRoute","isLoggedIn","App","emptyCard","createdAt","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmDeletePopupOpen","setIsConfirmDeletePopupOpen","isPopupSaving","setIsPopupSaving","selectedCard","setSelectedCard","cardToDelete","setCardToDelete","isInfoTooltipOpen","setIsInfoTooltipOpen","isInfoTooltipSuccessful","setIsInfoTooltipSuccessful","cohort","setCurrentUser","setCards","closeAllPopups","closePopupOnEsc","key","document","addEventListener","removeEventListener","all","getUserInfo","getInitialCards","info","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleCardLike","changeLikeCardStatus","newCard","state","c","handleCardDelete","handleUserUpdate","setUserInfo","finally","handleAvatarUpdate","setUserAvatar","userInfo","handleAddPlaceSubmit","addCard","handleConfirmDeleteSubmit","deleteCard","history","useHistory","setupIsLoggedIn","mail","localStorage","getItem","signIn","data","setItem","push","register","Provider","removeItem","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AuthWrapper","setIsLoggedIn","jwt","checkToken","ReactDOM","StrictMode","getElementById"],"mappings":"+PAAMA,EACc,eADdA,EAI+B,cAJ/BA,EAMwB,YANxBA,EAQyB,eARzBA,EAUqB,kEAGrBC,EACoB,YAGpBC,EACK,+CADLA,EAEW,uCAFXA,EAGS,mBAHTA,EAIS,iCCnBTC,E,WACJ,WAAYC,GAAU,oBACpBC,KAAKC,SAAWF,EAAQG,QACxBF,KAAKG,SAAWJ,EAAQK,Q,8CAU1B,SAAWC,EAAMC,GAAoB,IAAZC,EAAW,uDAAJ,GACxBC,EAAc,CAClBF,OAAQA,EACRF,QAASJ,KAAKG,UAKhB,MAHe,SAAXG,GAAgC,UAAXA,IACvBE,EAAW,KAAWC,KAAKC,UAAUH,IAEhCI,MAAM,GAAD,OAAIX,KAAKC,UAAT,OAAoBI,GAAQG,GACvCI,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OACNC,QAAQC,OAAR,iBAAyBJ,EAAIK,gB,KAKnCC,E,iKAML,WACE,OAAOnB,KAAKoB,WAAW,WAAY,S,yBAQrC,YAA8B,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAClB,OAAOtB,KAAKoB,WAAW,WAAY,QAAS,CAACC,KAAMA,EAAMC,MAAOA,M,2BAQlE,SAAcC,GACZ,OAAOvB,KAAKoB,WAAW,kBAAmB,QAAS,CAACI,OAAQD,M,6BAO9D,WACE,OAAOvB,KAAKoB,WAAW,QAAS,S,qBAQlC,YAAyB,IAAfC,EAAc,EAAdA,KAAMI,EAAQ,EAARA,KACd,OAAOzB,KAAKoB,WAAW,QAAS,OAAQ,CAACC,KAAMA,EAAMI,KAAMA,M,wBAQ7D,SAAWC,GACT,OAAO1B,KAAKoB,WAAL,gBAAyBM,GAAU,Y,kCAQ5C,SAAqBA,EAAQC,GAC3B,OAAO3B,KAAKoB,WAAL,sBAA+BM,GAAUC,EAAU,SAAW,W,GA5DlD7B,GAgEjB8B,E,sKAMJ,SAAiBC,GACf7B,KAAK8B,aAAe,CAClB,eAAgBjC,EAChB,+BAA4BgC,M,sBAShC,YAA+B,IAApBE,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAChB,OAAOhC,KAAKoB,WAAW,SAAU,OAAQ,CAACW,MAAOA,EAAOC,SAAUA,M,oBAQpE,YAA6B,IAApBD,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACd,OAAOhC,KAAKoB,WAAW,SAAU,OAAQ,CAACW,MAAOA,EAAOC,SAAUA,M,wBAQpE,SAAWH,GACT,IAAMI,EAAcjC,KAAKG,SACzBH,KAAKkC,iBAAiBL,GACtB7B,KAAKG,SAAWH,KAAK8B,aACrB,IAAMK,EAAUnC,KAAKoB,WAAW,WAAY,OAG5C,OAFApB,KAAKG,SAAW8B,EAChBjC,KAAKkC,iBAAiB,IACfC,M,GA3CWrC,GAiDhBsC,EAAM,IAAIjB,EAAQ,CACtBjB,QAASL,EACTO,QAAS,CACPiC,cAAexC,EACf,eAAgBA,KAIdyC,EAAU,IAAIV,EAAQ,CAC1B1B,QAASL,EACTO,QAAS,CACP,eAAgBP,KC5JL,MAA0B,iC,OCG1B,SAAS0C,EAAOC,GAC7B,OACE,yBAAQC,UAAU,uBAAlB,UACE,qBAAKC,IAAKC,EAAMC,IAAI,0DAAuBH,UAAU,iBACrD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOI,OAAK,EAACxC,KAAK,IAAlB,SACE,sBAAKoC,UAAU,oBAAf,UACE,mBAAGA,UAAU,eAAb,SAA6BD,EAAMT,OAASS,EAAMT,QAClD,cAAC,IAAD,CAAMe,GAAG,UAAUC,QAASP,EAAMQ,SAChCP,UAAU,gGADZ,iDAIJ,cAAC,IAAD,CAAOpC,KAAK,WAAZ,SACE,cAAC,IAAD,CAAMyC,GAAG,WAAWL,UAAU,iGAA9B,8CAEF,cAAC,IAAD,CAAOpC,KAAK,WAAZ,SACE,cAAC,IAAD,CAAMyC,GAAG,WAAWL,UAAU,iGAA9B,wFCjBH,IAAMQ,EAAqBC,IAAMC,gBCCzB,SAASC,EAAKZ,GAG3B,IAAMa,EAAcC,qBAAWL,GAMzBtB,EAAUa,EAAMe,KAAKC,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQN,EAAYM,OACjEC,EAAWpB,EAAMe,KAAKM,MAAMF,MAAQN,EAAYM,IAUtD,OACE,qBAAIlB,UAAU,QAAd,UACGmB,EAAW,wBAAQnB,UAAU,wDAAwDqB,KAAK,SAC9E,aAAW,wKAAiCf,QAPnC,WACxBP,EAAMuB,aAAavB,EAAMe,SAM0E,GACjG,qBAAKb,IAAKF,EAAMe,KAAK9B,KAAMmB,IAAG,mCAAUJ,EAAMe,KAAKlC,MAAQoB,UAAU,oBAAoBM,QAnBrE,WACtBP,EAAMwB,YAAYxB,EAAMe,SAmBtB,oBAAId,UAAU,cAAd,SAA6BD,EAAMe,KAAKlC,OACxC,wBAAQoB,UAAS,0BAAqBd,EAAU,2BAA6B,GAA5D,wCAAsGmC,KAAK,SAC3H,aAAW,iMAAsCf,QAf9B,WACtBP,EAAMyB,WAAWzB,EAAMe,SAerB,mBAAGd,UAAU,yBAAb,SAAuCD,EAAMe,KAAKC,MAAMU,YC1B/C,SAASC,EAAK3B,GAE3B,IAAMa,EAAcC,qBAAWL,GAE/B,OACE,uBAAMR,UAAU,wBAAhB,UACE,0BAASA,UAAU,wBAAnB,UACE,sBAAKA,UAAU,8BAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKC,IAAKW,EAAY7B,OAAQoB,IAAI,4EAAgBH,UAAU,iBAC5D,wBAAQA,UAAU,uEACVqB,KAAK,SAAS,aAAW,uKAAgCf,QAASP,EAAM4B,kBAElF,sBAAK3B,UAAU,gBAAf,UACE,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BY,EAAYhC,OAC3C,wBAAQoB,UAAU,2DACVqB,KAAK,SAAS,aAAW,uKAAgCf,QAASP,EAAM6B,mBAElF,mBAAG5B,UAAU,uBAAb,SAAqCY,EAAY/B,cAGrD,wBAAQmB,UAAU,0DACVqB,KAAK,SAAS,aAAW,oLAAmCf,QAASP,EAAM8B,gBAErF,yBAAS7B,UAAU,uBAAnB,SACE,oBAAIA,UAAU,6BAAd,SACGD,EAAM+B,MAAMC,KAAI,SAAAjB,GAAI,OAAI,cAACH,EAAD,CAAMG,KAAMA,EAAqBS,YAAaxB,EAAMwB,YAAaC,WAAYzB,EAAMyB,WAAYF,aAAcvB,EAAMuB,cAA5FR,EAAKI,eChChD,SAASc,IACtB,OACE,wBAAQhC,UAAU,uBAAlB,SACE,mBAAGA,UAAU,oBAAb,iICDS,SAASiC,EAAclC,GACpC,OACE,qBAAKC,UAAS,2BAAsBD,EAAMnB,KAA5B,qCAA6DmB,EAAMmC,QAAUhF,GAA3F,SACE,sBAAK8C,UAAU,kBAAf,UACE,wBAAQA,UAAU,iEAAiEqB,KAAK,SAAS,aAAW,6HAC3Gf,QAASP,EAAMoC,UAChB,uBAAMvD,KAAMmB,EAAMnB,KAAMoB,UAAU,aAAaoC,SAAUrC,EAAMqC,SAA/D,UACE,oBAAIpC,UAAS,2BAAsBD,EAAMsC,UAAY,6BAA+B,IAApF,SAA2FtC,EAAMuC,YAChGvC,EAAMwC,SACP,wBAAQvC,UAAU,iEAAiEqB,KAAK,SAAxF,SACGtB,EAAMyC,SAAWtF,EAAsC6C,EAAM0C,2BCP3D,SAASC,EAAiB3C,GAEvC,MAAwB4C,mBAAS,IAAjC,mBAAO/D,EAAP,KAAagE,EAAb,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACMlC,EAAcC,qBAAWL,GAE/BuC,qBAAU,WACRH,EAAQhC,EAAYhC,MACpBkE,EAAelC,EAAY/B,SAC1B,CAAC+B,EAAab,EAAMmC,SAkBvB,OACE,eAACD,EAAD,CAAerD,KAAM1B,EAAyCoF,UAAU,4HAAwBG,iBAAiB,yDAAYP,OAAQnC,EAAMmC,OACzIC,QAASpC,EAAMoC,QAASC,SAVP,SAACY,GACpBA,EAAEC,iBACFlD,EAAMmD,aAAa,CACjBtE,OACAC,MAAOgE,KAMyCL,SAAUzC,EAAMyC,SADlE,UAEE,uBAAOW,GAAG,4BAA4B9B,KAAK,OAAOzC,KAAK,cACrDoB,UAAU,kBAAkBoD,YAAY,iEAAeC,UAAU,IAAIC,UAAU,KAAKC,SAAS,WAAWC,MAAO5E,EAAM6E,SApBlG,SAACT,GACxBJ,EAAQI,EAAEU,OAAOF,UAoBf,sBAAMxD,UAAU,wDAAhB,oIACA,uBAAOmD,GAAG,mCAAmC9B,KAAK,OAAOzC,KAAK,qBAC5DoB,UAAU,kBAAkBoD,YAAY,sHAAuBC,UAAU,IAAIC,UAAU,MAAMC,SAAS,WAAWC,MAAOX,EACxHY,SApB0B,SAACT,GAC/BF,EAAeE,EAAEU,OAAOF,UAoBtB,sBAAMxD,UAAU,+DAAhB,uICrCS,SAAS2D,EAAgB5D,GAEtC,IAAM6D,EAAWC,mBAUjB,OACE,eAAC5B,EAAD,CAAerD,KAAM1B,EAA+CoF,UAAU,wFAAkBG,iBAAiB,yDAAYP,OAAQnC,EAAMmC,OACzIC,QAASpC,EAAMoC,QAASC,SAVP,SAACY,GACpBA,EAAEC,iBAEFlD,EAAM+D,eAAe,CACnB/E,OAAQ6E,EAASG,QAAQP,SAMuBhB,SAAUzC,EAAMyC,SADlE,UAEE,uBAAOwB,IAAKJ,EAAUT,GAAG,kCAAkC9B,KAAK,MAAMzC,KAAK,YAAYoB,UAAU,kBAAkBoD,YAAY,yFAC9HG,SAAS,aACV,sBAAMvD,UAAU,8DAAhB,sICjBS,SAASiE,EAAclE,GAEpC,MAAgC4C,mBAAS,IAAzC,mBAAOuB,EAAP,KAAiBC,EAAjB,KACA,EAA8BxB,mBAAS,IAAvC,mBAAOyB,EAAP,KAAgBC,EAAhB,KAEAtB,qBAAU,YACa,IAAjBhD,EAAMmC,SACRiC,EAAY,IACZE,EAAW,OAEZ,CAACtE,EAAMmC,SAcV,OACE,eAACD,EAAD,CAAerD,KAAM1B,EAAwCoF,UAAU,gEAAcG,iBAAiB,6CAAUP,OAAQnC,EAAMmC,OAC1HC,QAASpC,EAAMoC,QAASC,SANT,SAACkC,GACpBvE,EAAM8B,WAAWyC,EAAK,CAAC1F,KAAMsF,EAAUlF,KAAMoF,KAKO5B,SAAUzC,EAAMyC,SADpE,UAEE,uBAAOW,GAAG,0BAA0B9B,KAAK,OAAOzC,KAAK,YACnDoB,UAAU,kBAAkBoD,YAAY,mDAAWC,UAAU,IAAIC,UAAU,KAAKC,SAAS,WAAWC,MAAOU,EAAUT,SAhB9F,SAACT,GAC5BmB,EAAYnB,EAAEU,OAAOF,UAgBnB,sBAAMxD,UAAU,sDAAhB,oIACA,uBAAOmD,GAAG,yBAAyB9B,KAAK,MAAMzC,KAAK,WAAWoB,UAAU,kBAAkBoD,YAAY,qGACrGG,SAAS,WAAWC,MAAOY,EAASX,SAfb,SAACT,GAC3BqB,EAAWrB,EAAEU,OAAOF,UAelB,sBAAMxD,UAAU,qDAAhB,0HClCS,SAASuE,EAAmBxE,GACzC,OACE,cAACkC,EAAD,CAAeK,UAAU,2DAAcG,iBAAiB,eAAKP,OAAQnC,EAAMmC,OAAQC,QAASpC,EAAMoC,QAASC,SAAUrC,EAAMqC,SACzHC,WAAW,EAAMG,SAAUzC,EAAMyC,WCHxB,SAASgC,EAAWzE,GACjC,OACE,qBAAKC,UAAS,iEAA4DD,EAAMe,KAAK9B,KAAO9B,EAA+B,IAA3H,SACI,sBAAK8C,UAAU,kBAAf,UACE,wBAAQA,UAAU,iEAAiEqB,KAAK,SAAS,aAAW,6HAC1Gf,QAASP,EAAMoC,UACjB,qBAAKlC,IAAKF,EAAMe,KAAK9B,KAAMmB,IAAG,mCAAUJ,EAAMe,KAAKlC,MAAQoB,UAAU,eAAeM,QAASP,EAAMe,KAAKR,UACxG,mBAAGN,UAAU,2BAAb,SAAyCD,EAAMe,KAAKlC,YCP/C,SAAS6F,EAAc1E,GACpC,OACE,qBAAKC,UAAU,QAAf,SACE,qBAAKA,UAAS,gDAA2C7C,GAAzD,SACE,uBAAMyB,KAAMmB,EAAMnB,KAAMoB,UAAS,sCAAiC7C,GAAsCiF,SAAUrC,EAAMqC,SAAxH,UACE,oBAAIpC,UAAS,kDAA6C7C,GAA1D,SAAiG4C,EAAMuC,YACtGvC,EAAMwC,UAAYxC,EAAMwC,SAASmC,QAAO,SAAAC,GAAK,OAAMA,EAAM5E,MAAMC,UAAU4E,SAAS,6BACnF,wBAAQ5E,UAAS,4DAAuD7C,EAAvD,4CAChBkE,KAAK,SADN,SACgBtB,EAAM0C,mBACrB1C,EAAMwC,UAAYxC,EAAMwC,SAASmC,QAAO,SAAAC,GAAK,OAAIA,EAAM5E,MAAMC,UAAU4E,SAAS,oCCP5E,SAASC,EAAS9E,GAE/B,MAA0B4C,mBAAS,IAAnC,mBAAOrD,EAAP,KAAcwF,EAAd,KACA,EAAgCnC,mBAAS,IAAzC,mBAAOpD,EAAP,KAAiBwF,EAAjB,KAqBA,OACE,eAACN,EAAD,CAAe7F,KAAK,gBAAgB0D,UAAU,qEAAcG,iBAAiB,+GAAqBL,SAP/E,SAACY,GACpBA,EAAEC,iBACFlD,EAAMiF,WAAW1F,EAAOC,GANxBuF,EAAS,IACTC,EAAY,KAUZ,UACE,uBAAO5B,GAAG,8BAA8B9B,KAAK,QAAQzC,KAAK,gBACxDoB,UAAU,kDAAkDoD,YAAY,QAAQC,UAAU,IAAIC,UAAU,MAAMC,SAAS,WAAWC,MAAOlE,EACzImE,SAvBoB,SAACT,GACzB8B,EAAS9B,EAAEU,OAAOF,UAuBhB,sBAAMxD,UAAU,0DAAhB,oIACA,uBAAOmD,GAAG,iCAAiC9B,KAAK,WAAWzC,KAAK,mBAC9DoB,UAAU,kDAAkDoD,YAAY,uCAASC,UAAU,IAAIC,UAAU,KAAKC,SAAS,WAAWC,MAAOjE,EACzIkE,SAvBuB,SAACT,GAC5B+B,EAAY/B,EAAEU,OAAOF,UAuBnB,sBAAMxD,UAAU,6DAAhB,oIACA,oBAAGA,UAAU,gEAAb,kIACwB,cAAC,IAAD,CAAMK,GAAG,WAAWL,UAAU,8FAA9B,kDCpCf,SAAS6E,EAAS9E,GAE/B,MAA0B4C,mBAAS,IAAnC,mBAAOrD,EAAP,KAAcwF,EAAd,KACA,EAAgCnC,mBAAS,IAAzC,mBAAOpD,EAAP,KAAiBwF,EAAjB,KAqBA,OACE,eAACN,EAAD,CAAe7F,KAAK,aAAa0D,UAAU,2BAAOG,iBAAiB,iCAAQL,SAPxD,SAACY,GACpBA,EAAEC,iBACFlD,EAAMkF,QAAQ3F,EAAOC,GANrBuF,EAAS,IACTC,EAAY,KAUZ,UACE,uBAAO5B,GAAG,2BAA2B9B,KAAK,QAAQzC,KAAK,aACrDoB,UAAU,kDAAkDoD,YAAY,QAAQC,UAAU,IAAIC,UAAU,MAAMC,SAAS,WAAWC,MAAOlE,EACzImE,SAvBoB,SAACT,GACzB8B,EAAS9B,EAAEU,OAAOF,UAuBhB,sBAAMxD,UAAU,uDAAhB,oIACA,uBAAOmD,GAAG,8BAA8B9B,KAAK,WAAWzC,KAAK,gBAC3DoB,UAAU,kDAAkDoD,YAAY,uCAASC,UAAU,IAAIC,UAAU,KAAKC,SAAS,WAAWC,MAAOjE,EACzIkE,SAvBuB,SAACT,GAC5B+B,EAAY/B,EAAEU,OAAOF,UAuBnB,sBAAMxD,UAAU,0DAAhB,uICpCS,UAA0B,yCCA1B,MAA0B,yCCI1B,SAASkF,EAAYnF,GAClC,OACE,qBAAKC,UAAS,mEAA8DD,EAAMmC,OAAShF,EAA+B,IAA1H,SACI,sBAAK8C,UAAU,2DAAf,UACE,wBAAQA,UAAU,iEAAiEqB,KAAK,SAAS,aAAW,6HAC1Gf,QAASP,EAAMoC,UAEhBpC,EAAMoF,WACL,qCACE,qBAAKlF,IAAKmF,EAAapF,UAAU,sBAAsBG,IAAI,8EAC3D,mBAAGH,UAAU,sBAAb,sLAGF,qCACE,qBAAKC,IAAKoF,EAAarF,UAAU,sBAAsBG,IAAI,8EAC3D,mBAAGH,UAAU,sBAAb,yNCjBP,IAAMsF,EAAc7E,IAAMC,gBCElB,SAAS6E,EAAexF,GAIrC,OAFuBc,qBAAWyE,GAA1BE,WAMJ,cAAC,IAAD,eAAWzF,IAHN,cAAC,IAAD,CAAUM,GAAG,aCST,SAASoF,IAEtB,IAAMC,EAAY,CAAC1G,KAAM,GAAIJ,KAAM,GAAImC,MAAO,GAAIG,IAAK,GAAIyE,UAAW,GAAIvE,MAAO,IAEjF,EAA4DuB,oBAAS,GAArE,mBAAOiD,EAAP,KAA+BC,EAA/B,KACA,EAAsDlD,oBAAS,GAA/D,mBAAOmD,EAAP,KAA4BC,EAA5B,KACA,EAA0DpD,oBAAS,GAAnE,mBAAOqD,EAAP,KAA8BC,EAA9B,KACA,EAAgEtD,oBAAS,GAAzE,mBAAOuD,EAAP,KAAiCC,EAAjC,KACA,EAA0CxD,oBAAS,GAAnD,mBAAOyD,EAAP,KAAsBC,EAAtB,KACA,EAAwC1D,mBAAS+C,GAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAAwC5D,mBAAS+C,GAAjD,mBAAOc,EAAP,KAAqBC,EAArB,KACA,EAAkD9D,oBAAS,GAA3D,mBAAO+D,EAAP,KAA0BC,GAA1B,KACA,GAA8DhE,oBAAS,GAAvE,qBAAOiE,GAAP,MAAgCC,GAAhC,MAGA,GAAsClE,mBAAS,CAAC/D,KAAM,GAAIC,MAAO,GAAIE,OAAQ,GAAImC,IAAK,GAAI4F,OAAQ,KAAlG,qBAAOlG,GAAP,MAAoBmG,GAApB,MACA,GAA0BpE,mBAAS,IAAnC,qBAAOb,GAAP,MAAckF,GAAd,MACOxB,GAAc3E,qBAAWyE,GAAzBE,WAEDyB,GAAiB,WACrBpB,GAA0B,GAC1BE,GAAuB,GACvBE,GAAyB,GACzBE,GAA4B,GAC5BI,EAAgBb,GAChBe,EAAgBf,GAChBiB,IAAqB,IAGvB5D,qBAAU,WACR,IAAMmE,EAAkB,SAAC5C,GACP,WAAZA,EAAI6C,KACNF,MAKJ,OAFAG,SAASC,iBAAiB,UAAWH,GAE9B,WAAOE,SAASE,oBAAoB,UAAWJ,MACrD,IAEHnE,qBAAU,WAEJyC,IACJjH,QAAQgJ,IAAI,CAAC5H,EAAI6H,cAAe7H,EAAI8H,oBACnCtJ,MAAK,YAAoB,IAAD,mBAAjBuJ,EAAiB,KAAX5F,EAAW,KACvBiF,GAAeW,GACfV,GAASlF,MAEV6F,OAAM,SAAAC,GAAQC,QAAQC,IAAIF,QAE1B,CAACpC,KAEJ,IAAMuC,GAAwB,WAC5B9B,GAAyB,IAGrB+B,GAAyB,WAC7BnC,GAA0B,IAGtBoC,GAAsB,WAC1BlC,GAAuB,IAGnBmC,GAAkB,SAACpH,GACvByF,EAAgBzF,IAGlB,SAASqH,GAAerH,GACtB,IAAM5B,EAAU4B,EAAKC,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAQN,GAAYM,OAEjEvB,EAAIyI,qBAAqBtH,EAAKI,IAAKhC,GAClCf,MAAK,SAACkK,GACLrB,IAAS,SAAAsB,GAAK,OAAIA,EAAMvG,KAAI,SAAAwG,GAAC,OAAIA,EAAErH,MAAQJ,EAAKI,IAAMmH,EAAUE,WAEjEZ,OAAM,SAAAC,GAAQC,QAAQC,IAAIF,MAG7B,SAASY,GAAiB1H,GACxBqF,GAA4B,GAC5BM,EAAgB3F,GAGlB,IAAM2H,GAAmB,SAAC,GAAmB,IAAlB7J,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MAC/BwH,GAAiB,GACjB1G,EAAI+I,YAAY,CAAC9J,OAAMC,UACtBV,MAAK,SAAAuJ,GACJX,GAAeW,GACfT,QAEDU,OAAM,SAAAC,GAAQC,QAAQC,IAAIF,MAC1Be,SAAQ,WAAOtC,GAAiB,OAG7BuC,GAAqB,SAAC,GAAc,IAAb7J,EAAY,EAAZA,OAC3BsH,GAAiB,GACjB1G,EAAIkJ,cAAc9J,GACjBZ,MAAK,SAAAC,GACJ,IAAM0K,EAAQ,eAAOlI,IACrBkI,EAAS/J,OAASA,EAClBgI,GAAe+B,GACf7B,QAEDU,OAAM,SAAAC,GAAQC,QAAQC,IAAIF,MAC1Be,SAAQ,WAAOtC,GAAiB,OAG7B0C,GAAuB,SAACzE,EAAD,GAAwB,IAAjB1F,EAAgB,EAAhBA,KAAMI,EAAU,EAAVA,KACxCsF,EAAIrB,iBACJoD,GAAiB,GACjB1G,EAAIqJ,QAAQ,CAACpK,OAAMI,SAClBb,MAAK,SAAA2C,GACJkG,IAAS,SAAAlF,GAAK,OAAKhB,GAAL,mBAAcgB,OAC5BmF,QAEDU,OAAM,SAAAC,GAAQC,QAAQC,IAAIF,MAC1Be,SAAQ,WAAOtC,GAAiB,OAG7B4C,GAA4B,SAAC3E,GACjCA,EAAIrB,iBACJoD,GAAiB,GACjB1G,EAAIuJ,WAAW1C,EAAatF,KAC3B/C,MAAK,SAAAC,GACJ4I,IAAS,SAAAlF,GAAK,OAAIA,EAAM4C,QAAO,SAAA6D,GAAC,OAAIA,EAAErH,MAAQsF,EAAatF,UAC3D+F,QAEDU,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MACzBe,SAAQ,WAAOtC,GAAiB,OAK7B8C,GAAUC,cACRC,GAAoBxI,qBAAWyE,GAA/B+D,gBACR,GAA0B1G,mBAAS,IAAnC,qBAAOrD,GAAP,MAAcwF,GAAd,MAEA/B,qBAAU,WACR,IAAMuG,EAAOC,aAAaC,QAAQ,SAC9BF,GACFxE,GAASwE,KACV,CAACxE,KAEJ,IAAMG,GAAU,SAAC3F,EAAOC,GACtBM,EAAQ4J,OAAO,CAAEnK,QAAOC,aACvBpB,MAAK,SAAAuL,GACAA,EAAKtK,QACPmK,aAAaI,QAAQ,QAASD,EAAKtK,OACnCmK,aAAaI,QAAQ,QAASrK,GAC9BwF,GAASxF,GACT+J,IAAgB,GAChBF,GAAQS,KAAK,SAGhBjC,OAAM,SAAAC,GACLf,IAA2B,GAC3BF,IAAqB,OAUnB3B,GAAa,SAAC1F,EAAOC,GACzBM,EAAQgK,SAAS,CAACvK,QAAOC,aACxBpB,MAAK,SAAAC,GACJyI,IAA2B,GAC3BsC,GAAQS,KAAK,eAEdjC,OAAM,SAAAC,GACLf,IAA2B,MAE5B8B,SAAQ,SAAAvK,GACPuI,IAAqB,OAIzB,OACE,cAACnG,EAAmBsJ,SAApB,CAA6BtG,MAAO5C,GAApC,SACE,sBAAKZ,UAAU,qBAAf,UACE,cAACF,EAAD,CAAQS,SAvBG,WACfgJ,aAAaQ,WAAW,SACxBR,aAAaQ,WAAW,SACxBV,IAAgB,IAoBgB/J,MAAOA,KACnC,eAAC,IAAD,WACE,cAACiG,EAAD,CAAgBnF,OAAK,EAACxC,KAAK,IAAIoM,OAAQ,kBACrC,qCACE,cAACtI,EAAD,CAAME,cAAeoG,GAAwBnG,WAAYoG,GACvDtG,aAAcoG,GAAuBxG,YAAa2G,GAAiBpG,MAAOA,GAAON,WAAY2G,GAAgB7G,aAAckH,KAC7H,cAACxG,EAAD,IACA,cAACU,EAAD,CAAkBR,OAAQ0D,EAAwBzD,QAAS8E,GAAgB/D,aAAcuF,GAAkBjG,SAAU4D,IACrH,cAACnC,EAAD,CAAe/B,OAAQ4D,EAAqB3D,QAAS8E,GAAgBpF,WAAYkH,GAAsBvG,SAAU4D,IACjH,cAACzC,EAAD,CAAiBzB,OAAQ8D,EAAuB7D,QAAS8E,GAAgBnD,eAAgB8E,GAAoBpG,SAAU4D,IACvH,cAAC5B,EAAD,CAAY1D,KAAMwF,EAAcnE,QAAS8E,KACzC,cAAC1C,EAAD,CAAoBrC,OAAQgE,EAA0B/D,QAAS8E,GAAgB7E,SAAU6G,GAA2BzG,SAAU4D,UAGlI,cAAC,IAAD,CAAOxI,KAAK,WAAWoM,OAAS,kBAC5B,cAACnF,EAAD,CAAUG,WAAYA,QAE1B,cAAC,IAAD,CAAOpH,KAAK,WAAWoM,OAAQ,kBAC3B,cAAC,EAAD,CAAO/E,QAASA,QAEpB,cAAC,IAAD,CAAOrH,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUyC,GAAG,WAGjB,cAAC6E,EAAD,CAAahD,OAAQwE,EAAmBvE,QAAS8E,GAAgB9B,WAAYyB,UCjOrF,IAYeqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhM,MAAK,YAAkD,IAA/CiM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFC,SAASO,GAAT,GAAkC,IAAZlI,EAAW,EAAXA,SAEnC,EAAoCI,oBAAS,GAA7C,mBAAO6C,EAAP,KAAmBkF,EAAnB,KACMvB,EAAUC,cA0BhB,OAvBArG,qBAAU,WACR,IAAM4H,EAAMpB,aAAaC,QAAQ,SAC7BmB,GACF9K,EAAQ+K,WAAWD,GAClBxM,MAAK,SAAAC,GACJmL,aAAaI,QAAQ,QAASvL,EAAIsL,KAAKpK,OACvCoL,GAAc,MAEf/C,OAAM,SAAAC,GACLC,QAAQC,IAAIF,SAKlB7E,qBAAU,WACJyC,GACF2D,EAAQS,KAAK,OACd,CAACpE,EAAY2D,IAOd,cAAC7D,EAAYwE,SAAb,CAAsBtG,MAAO,CAAEgC,WAAYA,EAAY6D,gBALzD,SAAiB7F,GACfkH,EAAclH,KAId,SACGjB,IC5BPsI,IAASb,OACP,cAAC,IAAMc,WAAP,UACE,cAAC,IAAD,UACE,cAACL,GAAD,UACE,cAAChF,EAAD,UAIN2B,SAAS2D,eAAe,SAM1Bd,M","file":"static/js/main.29b0c804.chunk.js","sourcesContent":["const popupConfig = {\n  popupOpenedClass: 'popup_opened',\n  popupSelectorPrefix: '.popup_type_',\n  profileAvatarEditButtonSelector: '.profile__avatar-edit-button',\n  profileAvatarEditPopupAndFormName: 'edit-avatar',\n  profileAddButtonSelector: '.profile__add-button',\n  profileAddPopupAndFormName: 'add-place',\n  profileEditButtonSelector: '.profile__edit-button',\n  profileEditPopupAndFormName: 'edit-profile',\n  cardConfirmDeletePopupAndFormName: 'confirm-delete',\n  popupWithFormSavingText: 'Сохранение...',\n};\n\nconst enterConfig = {\n  containerThemeEntrance: 'black-box',\n};\n\nconst apiConfig = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25/',\n  authorization: 'd8d84bac-32d7-42f9-a622-bbe14f1aa9f5',\n  appJSONType: 'application/json',\n  authBaseUrl: 'https://auth.nomoreparties.co/'\n};\n\nexport {popupConfig, enterConfig, apiConfig};\n","import { apiConfig } from './utils';\n\nclass Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  /**\n   * Sends a network request with given parameters\n   * @param {String} path - the last part of full url\n   * @param {String} method - 'GET || 'POST' || 'PATCH' || 'PUT' || 'DELETE'\n   * @param {String} body - is added with some methods\n   * @returns {Promise}\n   */\n  _fetchPath(path, method, body = {}) {\n    const fetchObject = {\n      method: method,\n      headers: this._headers,\n    }\n    if (method === 'POST' || method === 'PATCH')\n      fetchObject['body'] = JSON.stringify(body);\n\n    return fetch(`${this._baseUrl}${path}`, fetchObject)\n    .then(res => {\n      if (res.ok)\n        return res.json();\n      return Promise.reject(`Error: ${res.status}`);\n    });\n  }\n}\n\nclass  DataApi extends Api {\n\n  /**\n   * Gets user profile information\n   * @returns {Promise}\n   */\n  getUserInfo() {\n    return this._fetchPath('users/me', 'GET');\n  }\n\n  /**\n   * Sets user profile information\n   * @param {Object} object - {name, about}\n   * @returns {Promise}\n   */\n  setUserInfo({ name, about }) {\n    return this._fetchPath('users/me', 'PATCH', {name: name, about: about});\n  }\n\n  /**\n   * Tries to save a link to a new user avatar to the server\n   * @param {String} url\n   * @returns {Promise}\n   */\n  setUserAvatar(url) {\n    return this._fetchPath('users/me/avatar', 'PATCH', {avatar: url});\n  }\n\n  /**\n   * Loads cards from the server\n   * @returns {Promise}\n   */\n  getInitialCards() {\n    return this._fetchPath('cards', 'GET');\n  }\n\n  /**\n   * Adds a new card to the server\n   * @param {Object} object - {name, link}\n   * @returns {Promise} - contains new card data\n   */\n  addCard({ name, link }) {\n    return this._fetchPath('cards', 'POST', {name: name, link: link});\n  }\n\n  /**\n   * Removes card from server\n   * @param {String} cardId\n   * @returns {Promise}\n   */\n  deleteCard(cardId) {\n    return this._fetchPath(`cards/${cardId}`, 'DELETE')\n  }\n\n  /**\n   * Changes card like state on the server\n   * @param {String} cardId\n   * @returns {Promise}\n   */\n  changeLikeCardStatus(cardId, isLiked) {\n    return this._fetchPath(`cards/likes/${cardId}`, isLiked ? 'DELETE' : 'PUT');\n  }\n}\n\nclass AuthApi extends Api {\n\n  /**\n   * Creates authentication headers with a jwt token\n   * @param {String} token\n   */\n  _makeAuthHeaders(token) {\n    this._authHeaders = {\n      'Content-Type': apiConfig.appJSONType,\n      'Authorization' : `Bearer ${token}`\n    }\n  }\n\n  /**\n   * Creates a new user on the server\n   * @param {Object} object - {email, password}\n   * @returns {Promise}\n   */\n  register( {email, password} ) {\n    return this._fetchPath('signup', 'POST', {email: email, password: password});\n  }\n\n  /**\n   * Signs in the user to the server\n   * @param {Object} object - {email, password}\n   * @returns {Promise}\n   */\n  signIn({ email, password }) {\n    return this._fetchPath('signin', 'POST', {email: email, password: password});\n  }\n\n  /**\n   * Tests the validity of jwt token\n   * @param {String} token\n   * @returns\n   */\n  checkToken(token) {\n    const prevHeaders = this._headers;\n    this._makeAuthHeaders(token);\n    this._headers = this._authHeaders;\n    const request = this._fetchPath('users/me', 'GET');\n    this._headers = prevHeaders;\n    this._makeAuthHeaders(''); //avoid storing the token in api object\n    return request;\n  }\n}\n\n//prepare api objects for use\n\nconst api = new DataApi({\n  baseUrl: apiConfig.baseUrl,\n  headers: {\n    authorization: apiConfig.authorization,\n    'Content-Type': apiConfig.appJSONType\n  }\n});\n\nconst authApi = new AuthApi({\n  baseUrl: apiConfig.authBaseUrl,\n  headers: {\n    'Content-Type': apiConfig.appJSONType\n  }\n});\n\nexport { api, authApi };\n","export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import { Link, Switch, Route } from 'react-router-dom';\nimport logo from '../images/logo.svg';\n\nexport default function Header(props) {\n  return (\n    <header className=\"header body__element\">\n      <img src={logo} alt=\"логотип mesto Russia\" className=\"header__logo\" />\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"header__container\">\n            <p className=\"header__text\">{props.email && props.email}</p>\n            <Link to=\"sign-in\" onClick={props.onLogout}\n              className=\"page__link page__link_size_adaptive page__link_color_gray transparent transparent_amount_more\">Выйти</Link>\n          </div>\n        </Route>\n        <Route path=\"/sign-up\">\n          <Link to=\"/sign-in\" className=\"page__link page__link_size_adaptive page__link_color_white transparent transparent_amount_more\">Войти</Link>\n        </Route>\n        <Route path=\"/sign-in\">\n          <Link to=\"/sign-up\" className=\"page__link page__link_size_adaptive page__link_color_white transparent transparent_amount_more\">Регистрация</Link>\n        </Route>\n      </Switch>\n    </header>\n  );\n}\n","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();\n","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nexport default function Card(props) {\n\n  //subscribe to context\n  const currentUser = useContext(CurrentUserContext);\n\n  const handleCardClick = () => {\n    props.onCardClick(props.card);\n  }\n\n  const isLiked = props.card.likes.some(like => like._id === currentUser._id);\n  const isMyCard = props.card.owner._id === currentUser._id;\n\n  const handleLikeClick = () => {\n    props.onCardLike(props.card);\n  }\n\n  const handleDeleteClick = () => {\n    props.onCardDelete(props.card);\n  }\n\n  return (\n    <li className=\"place\">\n      {isMyCard ? <button className=\"place__remove-btn transparent transparent_amount_more\" type=\"button\"\n                   aria-label=\"Кнопка удаления карточки места\" onClick={handleDeleteClick}></button> : ''}\n      <img src={props.card.link} alt={`Фото ${props.card.name}`} className=\"place__photo flip\" onClick={handleCardClick}/>\n      <h2 className=\"place__name\">{props.card.name}</h2>\n      <button className={`place__like-btn ${isLiked ? 'place__like-btn_selected' : ''} transparent transparent_amount_less`} type=\"button\"\n       aria-label=\"Кнопка лайк сердечко карточки места\" onClick={handleLikeClick}></button>\n      <p className=\"place__number-of-likes\">{props.card.likes.length}</p>\n    </li>\n  );\n}\n","import Card from './Card';\nimport { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nexport default function Main(props) {\n  //subscribe to context\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content body__element\">\n      <section className=\"profile body__element\">\n        <div className=\"profile__pic-info-container\">\n          <div className=\"profile__pic-container\">\n            <img src={currentUser.avatar} alt=\"фото аккаунта\" className=\"profile__pic\" />\n            <button className=\"profile__avatar-edit-button transparent transparent_amount_much-more\"\n                    type=\"button\" aria-label=\"Кнопка редактирования аватара\" onClick={props.onEditAvatar}></button>\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__name-edit-wrap\">\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\n              <button className=\"profile__edit-button transparent transparent_amount_more\"\n                      type=\"button\" aria-label=\"Кнопка редактирования профиля\" onClick={props.onEditProfile}></button>\n            </div>\n            <p className=\"profile__description\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button className=\"profile__add-button transparent transparent_amount_more\"\n                type=\"button\" aria-label=\"Кнопка добавления карточки места\" onClick={props.onAddPlace}></button>\n      </section>\n      <section className=\"places body__element\">\n        <ul className=\"places__list body__element\">\n          {props.cards.map(card => <Card card={card} key={card._id} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete} />)}\n        </ul>\n      </section>\n    </main>\n  );\n}\n","export default function Footer() {\n  return (\n    <footer className=\"footer body__element\">\n      <p className=\"footer__copyright\">&copy; 2021 Максим Толстокорый</p>\n    </footer>\n  );\n}\n","import { popupConfig } from \"../utils/utils\";\n\nexport default function PopupWithForm(props) {\n  return (\n    <div className={`popup popup_type_${props.name} popup_transparent_medium ${props.isOpen && popupConfig.popupOpenedClass}`}>\n      <div className=\"page__container\">\n        <button className=\"popup__container-close-btn transparent transparent_amount_more\" type=\"button\" aria-label=\"Кнопка закрытия попапа\"\n         onClick={props.onClose}></button>\n        <form name={props.name} className=\"page__form\" onSubmit={props.onSubmit}>\n          <h2 className={`page__form-title ${props.onlyTitle ? 'page__form-title_onlytitle' : ''}`}>{props.formTitle}</h2>\n          {props.children}\n          <button className=\"page__form-submit-btn transparent transparent_amount_much-more\" type=\"submit\">\n            {props.isSaving ? popupConfig.popupWithFormSavingText : props.submitButtonText}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { popupConfig } from '../utils/utils';\nimport { useState, useContext, useEffect } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport default function EditProfilePopup(props) {\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const currentUser = useContext(CurrentUserContext);\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, props.isOpen]);\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleDescriptionChange = (e) => {\n    setDescription(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  };\n\n  return (\n    <PopupWithForm name={popupConfig.profileEditPopupAndFormName} formTitle=\"Редактировать профиль\" submitButtonText=\"Сохранить\" isOpen={props.isOpen}\n      onClose={props.onClose} onSubmit={handleSubmit} isSaving={props.isSaving} >\n      <input id=\"popup__profile-name-input\" type=\"text\" name=\"profileName\"\n        className=\"page__form-text\" placeholder=\"Жак-Ив Кусто\" minLength=\"2\" maxLength=\"40\" required=\"required\" value={name} onChange={handleNameChange}/>\n      <span className=\"popup__profile-name-input-error page__form-text-error\">Вы пропустили это поле.</span>\n      <input id=\"popup__profile-description-input\" type=\"text\" name=\"profileDescription\"\n        className=\"page__form-text\" placeholder=\"Исследователь океана\" minLength=\"2\" maxLength=\"200\" required=\"required\" value={description}\n        onChange={handleDescriptionChange} />\n      <span className=\"popup__profile-description-input-error page__form-text-error\">Вы пропустили это поле.</span>\n    </PopupWithForm>\n  );\n}\n","import { popupConfig } from \"../utils/utils\";\nimport { useRef } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport default function EditAvatarPopup(props) {\n\n  const inputRef = useRef();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: inputRef.current.value\n    });\n  };\n\n  return (\n    <PopupWithForm name={popupConfig.profileAvatarEditPopupAndFormName} formTitle=\"Обновить аватар\" submitButtonText=\"Сохранить\" isOpen={props.isOpen}\n      onClose={props.onClose} onSubmit={handleSubmit} isSaving={props.isSaving} >\n      <input ref={inputRef} id=\"popup__profile-avatar-url-input\" type=\"url\" name=\"avatarUrl\" className=\"page__form-text\" placeholder=\"Ссылка на аватар\"\n       required=\"required\" />\n      <span className=\"popup__profile-avatar-url-input-error page__form-text-error\">Введите адрес аватара.</span>\n    </PopupWithForm>\n  );\n}\n","import { popupConfig } from \"../utils/utils\";\nimport { useState, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport default function AddPlacePopup(props) {\n\n  const [cardName, setCardName] = useState('');\n  const [cardUrl, setCardUrl] = useState('');\n\n  useEffect(() => {\n    if (props.isOpen === false) {\n      setCardName('');\n      setCardUrl('');\n    }\n  }, [props.isOpen]);\n\n  const handleCardNameChange = (e) => {\n    setCardName(e.target.value);\n  };\n\n  const handleCardUrlChange = (e) => {\n    setCardUrl(e.target.value);\n  }\n\n  const handleSubmit = (evt) => {\n    props.onAddPlace(evt, {name: cardName, link: cardUrl});\n  };\n\n  return (\n    <PopupWithForm name={popupConfig.profileAddPopupAndFormName} formTitle=\"Новое место\" submitButtonText=\"Создать\" isOpen={props.isOpen}\n        onClose={props.onClose} onSubmit={handleSubmit} isSaving={props.isSaving}>\n      <input id=\"popup__place-name-input\" type=\"text\" name=\"placeName\"\n        className=\"page__form-text\" placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required=\"required\" value={cardName} onChange={handleCardNameChange} />\n      <span className=\"popup__place-name-input-error page__form-text-error\">Вы пропустили это поле.</span>\n      <input id=\"popup__place-url-input\" type=\"url\" name=\"placeUrl\" className=\"page__form-text\" placeholder=\"Ссылка на картинку\"\n       required=\"required\" value={cardUrl} onChange={handleCardUrlChange} />\n      <span className=\"popup__place-url-input-error page__form-text-error\">Введите адрес сайта.</span>\n    </PopupWithForm>\n  );\n}\n","import PopupWithForm from \"./PopupWithForm\";\n\nexport default function ConfirmDeletePopup(props) {\n  return (\n    <PopupWithForm formTitle=\"Вы уверены?\" submitButtonText=\"Да\" isOpen={props.isOpen} onClose={props.onClose} onSubmit={props.onSubmit}\n      onlyTitle={true} isSaving={props.isSaving} />\n  );\n}\n","import { popupConfig } from \"../utils/utils\";\n\nexport default function ImagePopup(props) {\n  return (\n    <div className={`popup popup_type_show-image popup_transparent_slightly ${props.card.link ? popupConfig.popupOpenedClass : ''}`}>\n        <div className=\"page__container\">\n          <button className=\"popup__container-close-btn transparent transparent_amount_more\" type=\"button\" aria-label=\"Кнопка закрытия попапа\"\n            onClick={props.onClose}></button>\n          <img src={props.card.link} alt={`Фото ${props.card.name}`} className=\"popup__photo\" onClick={props.card.onClick} />\n          <p className=\"popup__photo-description\">{props.card.name}</p>\n        </div>\n    </div>\n  );\n}\n","import { enterConfig } from \"../utils/utils\";\n\nexport default function EnterPageForm(props) {\n  return (\n    <div className=\"enter\">\n      <div className={`page__container page__container_theme_${enterConfig.containerThemeEntrance}`}>\n        <form name={props.name} className={`page__form page__form_theme_${enterConfig.containerThemeEntrance}`} onSubmit={props.onSubmit}>\n          <h2 className={`page__form-title page__form-title_theme_${enterConfig.containerThemeEntrance}`}>{props.formTitle}</h2>\n          {props.children && props.children.filter(child => !(child.props.className.includes('page__form-bottom-text')))}\n          <button className={`page__form-submit-btn page__form-submit-btn_theme_${enterConfig.containerThemeEntrance} transparent transparent_amount_near-max`}\n           type=\"submit\">{props.submitButtonText}</button>\n          {props.children && props.children.filter(child => child.props.className.includes('page__form-bottom-text'))}\n        </form>\n      </div>\n    </div>\n  );\n}\n","import EnterPageForm from './EnterPageForm';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Register(props) {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onRegister(email, password);\n    resetForm();\n  }\n\n  return (\n    <EnterPageForm name=\"register-form\" formTitle=\"Регистрация\" submitButtonText=\"Зарегистрироваться\" onSubmit={handleSubmit}>\n      <input id=\"enter__register-email-input\" type=\"email\" name=\"registerEmail\"\n        className=\"page__form-text page__form-text_theme_black-box\" placeholder=\"Email\" minLength=\"3\" maxLength=\"254\" required=\"required\" value={email}\n        onChange={handleEmailChange}/>\n      <span className=\"enter__register-email-input-error page__form-text-error\">Вы пропустили это поле.</span>\n      <input id=\"enter__register-password-input\" type=\"password\" name=\"registerPassword\"\n        className=\"page__form-text page__form-text_theme_black-box\" placeholder=\"Пароль\" minLength=\"8\" maxLength=\"64\" required=\"required\" value={password}\n        onChange={handlePasswordChange} />\n      <span className=\"enter__register-password-input-error page__form-text-error\">Вы пропустили это поле.</span>\n      <p className=\"page__form-bottom-text page__form-bottom-text_theme_black-box\">\n        Уже зарегистрированы? <Link to=\"/sign-in\" className=\"page__link page__link_size_small page__link_color_white transparent transparent_amount_more\">Войти</Link>\n      </p>\n    </EnterPageForm>\n  );\n}\n","import EnterPageForm from './EnterPageForm';\nimport { useState } from 'react';\n\nexport default function Register(props) {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.onLogin(email, password);\n    resetForm();\n  }\n\n  return (\n    <EnterPageForm name=\"login-form\" formTitle=\"Вход\" submitButtonText=\"Войти\" onSubmit={handleSubmit}>\n      <input id=\"enter__login-email-input\" type=\"email\" name=\"loginEmail\"\n        className=\"page__form-text page__form-text_theme_black-box\" placeholder=\"Email\" minLength=\"3\" maxLength=\"254\" required=\"required\" value={email}\n        onChange={handleEmailChange}/>\n      <span className=\"enter__login-email-input-error page__form-text-error\">Вы пропустили это поле.</span>\n      <input id=\"enter__login-password-input\" type=\"password\" name=\"loginPassword\"\n        className=\"page__form-text page__form-text_theme_black-box\" placeholder=\"Пароль\" minLength=\"8\" maxLength=\"64\" required=\"required\" value={password}\n        onChange={handlePasswordChange} />\n      <span className=\"enter__login-password-input-error page__form-text-error\">Вы пропустили это поле.</span>\n    </EnterPageForm>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/success_icon.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/failure_icon.df8eddf6.svg\";","import { popupConfig } from \"../utils/utils\";\nimport successIcon from '../images/success_icon.svg';\nimport failureIcon from '../images/failure_icon.svg';\n\nexport default function InfoTooltip(props) {\n  return (\n    <div className={`popup popup_type_info-tooltip popup_transparent_slightly ${props.isOpen ? popupConfig.popupOpenedClass : ''}`}>\n        <div className=\"page__container page__container_type_fixed-size-adaptive\">\n          <button className=\"popup__container-close-btn transparent transparent_amount_more\" type=\"button\" aria-label=\"Кнопка закрытия попапа\"\n            onClick={props.onClose}></button>\n\n          {props.successful ? (\n            <>\n              <img src={successIcon} className=\"popup__confirm-icon\" alt=\"иконка успеха\" />\n              <p className=\"popup__confirm-text\">Вы успешно зарегистрировались!</p>\n            </>\n          ) : (\n            <>\n              <img src={failureIcon} className=\"popup__confirm-icon\" alt=\"иконка ошибки\" />\n              <p className=\"popup__confirm-text\">Что-то пошло не так! Попробуйте ещё раз.</p>\n            </>\n          )}\n        </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const AuthContext = React.createContext();\n","import { Route, Redirect } from 'react-router';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { useContext } from 'react';\n\nexport default function ProtectedRoute(props) {\n\n  const { isLoggedIn } = useContext(AuthContext);\n\n  if (!isLoggedIn)\n    return <Redirect to=\"/sign-in\" />\n  else\n    return (\n      <Route {...props} />\n    );\n}\n","import { useEffect, useState, useContext } from 'react';\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\nimport { api, authApi }  from '../utils/api';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Register from './Register';\nimport Login from './Login';\nimport InfoTooltip from './InfoTooltip';\nimport ProtectedRoute from './ProtectedRoute';\nimport { AuthContext } from \"../contexts/AuthContext\";\n\nexport default function App() {\n\n  const emptyCard = {link: '', name: '', likes: [], _id: '', createdAt: '', owner: ''};\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isConfirmDeletePopupOpen, setIsConfirmDeletePopupOpen] = useState(false);\n  const [isPopupSaving, setIsPopupSaving] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(emptyCard);\n  const [cardToDelete, setCardToDelete] = useState(emptyCard);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isInfoTooltipSuccessful, setIsInfoTooltipSuccessful] = useState(false);\n\n  //context state variables\n  const [currentUser, setCurrentUser] = useState({name: '', about: '', avatar: '', _id: '', cohort: ''});\n  const [cards, setCards] = useState([]);\n  const {isLoggedIn} = useContext(AuthContext);\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsConfirmDeletePopupOpen(false);\n    setSelectedCard(emptyCard);\n    setCardToDelete(emptyCard);\n    setIsInfoTooltipOpen(false);\n  };\n\n  useEffect(() => {\n    const closePopupOnEsc = (evt) => {\n      if (evt.key === 'Escape')\n        closeAllPopups();\n    };\n\n    document.addEventListener('keydown', closePopupOnEsc);\n\n    return () => {document.removeEventListener('keydown', closePopupOnEsc)};\n  }, []);\n\n  useEffect(() => {\n    //get api data on mount in parallel and put it in react state variables\n    if (isLoggedIn) {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n    .then(([info, cards]) => {\n      setCurrentUser(info);\n      setCards(cards);\n    })\n    .catch(err => {console.log(err)});\n    }\n  }, [isLoggedIn]);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n  };\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(like => like._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, isLiked)\n    .then((newCard) => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    })\n    .catch(err => {console.log(err)});\n  }\n\n  function handleCardDelete(card) {\n    setIsConfirmDeletePopupOpen(true);\n    setCardToDelete(card);\n  }\n\n  const handleUserUpdate = ({name, about}) => {\n    setIsPopupSaving(true);\n    api.setUserInfo({name, about})\n    .then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    })\n    .catch(err => {console.log(err)})\n    .finally(() => {setIsPopupSaving(false)});\n  };\n\n  const handleAvatarUpdate = ({avatar}) => {\n    setIsPopupSaving(true);\n    api.setUserAvatar(avatar)\n    .then(res => {\n      const userInfo = {...currentUser};\n      userInfo.avatar = avatar;\n      setCurrentUser(userInfo);\n      closeAllPopups();\n    })\n    .catch(err => {console.log(err)})\n    .finally(() => {setIsPopupSaving(false)});\n  };\n\n  const handleAddPlaceSubmit = (evt, {name, link}) => {\n    evt.preventDefault();\n    setIsPopupSaving(true);\n    api.addCard({name, link})\n    .then(card => {\n      setCards(cards => [card, ...cards]);\n      closeAllPopups();\n    })\n    .catch(err => {console.log(err)})\n    .finally(() => {setIsPopupSaving(false)});\n  };\n\n  const handleConfirmDeleteSubmit = (evt) => {\n    evt.preventDefault();\n    setIsPopupSaving(true);\n    api.deleteCard(cardToDelete._id)\n    .then(res => {\n      setCards(cards => cards.filter(c => c._id !== cardToDelete._id));\n      closeAllPopups();\n    })\n    .catch(err => console.log(err))\n    .finally(() => {setIsPopupSaving(false)});\n  };\n\n  //auth logic\n\n  const history = useHistory();\n  const { setupIsLoggedIn } = useContext(AuthContext);\n  const [email, setEmail] = useState('');\n\n  useEffect(() => {\n    const mail = localStorage.getItem('email');\n    if (mail)\n      setEmail(mail);\n  }, [setEmail]);\n\n  const onLogin = (email, password) => {\n    authApi.signIn({ email, password })\n    .then(data => {\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('email', email);\n        setEmail(email);\n        setupIsLoggedIn(true);\n        history.push('/');\n      }\n    })\n    .catch(err => {\n      setIsInfoTooltipSuccessful(false);\n      setIsInfoTooltipOpen(true);\n    });\n  };\n\n  const onLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('email');\n    setupIsLoggedIn(false);\n  };\n\n  const onRegister = (email, password) => {\n    authApi.register({email, password})\n    .then(res => {\n      setIsInfoTooltipSuccessful(true);\n      history.push('/sign-in');\n    })\n    .catch(err => {\n      setIsInfoTooltipSuccessful(false);\n    })\n    .finally(res => {\n      setIsInfoTooltipOpen(true);\n    });\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page body__element\">\n        <Header onLogout={onLogout} email={email} />\n        <Switch>\n          <ProtectedRoute exact path=\"/\" render={() => (\n            <>\n              <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n                onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\n              <Footer />\n              <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUserUpdate} isSaving={isPopupSaving} />\n              <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} isSaving={isPopupSaving} />\n              <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleAvatarUpdate} isSaving={isPopupSaving} />\n              <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n              <ConfirmDeletePopup isOpen={isConfirmDeletePopupOpen} onClose={closeAllPopups} onSubmit={handleConfirmDeleteSubmit} isSaving={isPopupSaving} />\n            </>\n          )} />\n          <Route path=\"/sign-up\" render={ () => (\n              <Register onRegister={onRegister} />\n          )} />\n          <Route path=\"/sign-in\" render={() => (\n              <Login onLogin={onLogin} />\n          )} />\n          <Route path=\"*\">\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n        <InfoTooltip isOpen={isInfoTooltipOpen} onClose={closeAllPopups} successful={isInfoTooltipSuccessful} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AuthContext } from '../contexts/AuthContext';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { authApi } from '../utils/api';\n\nexport default function AuthWrapper({children}) {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const history = useHistory();\n\n  //check if already logged in\n  useEffect(() => {\n    const jwt = localStorage.getItem('token');\n    if (jwt) {\n      authApi.checkToken(jwt)\n      .then(res => {\n        localStorage.setItem('email', res.data.email);\n        setIsLoggedIn(true);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isLoggedIn)\n      history.push('/');\n  }, [isLoggedIn, history]);\n\n  function toggle (value) {\n    setIsLoggedIn(value);\n  }\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn: isLoggedIn, setupIsLoggedIn: toggle }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport AuthWrapper from './components/AuthWrapper';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <AuthWrapper>\n        <App />\n      </AuthWrapper>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}